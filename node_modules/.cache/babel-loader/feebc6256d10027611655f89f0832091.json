{"remainingRequest":"/home/robert/go/src/github.com/wr125/vx_project/node_modules/babel-loader/lib/index.js!/home/robert/go/src/github.com/wr125/vx_project/node_modules/eslint-loader/index.js??ref--13-0!/home/robert/go/src/github.com/wr125/vx_project/src/store/modules/todos.js","dependencies":[{"path":"/home/robert/go/src/github.com/wr125/vx_project/src/store/modules/todos.js","mtime":1558801295925},{"path":"/home/robert/go/src/github.com/wr125/vx_project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/robert/go/src/github.com/wr125/vx_project/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/robert/go/src/github.com/wr125/vx_project/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/robert/go/src/github.com/wr125/vx_project/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar state = {\n  todos: []\n};\nvar getters = {\n  allTodos: function allTodos(state) {\n    return state.todos;\n  }\n};\nvar actions = {\n  fetchTodos: function () {\n    var _fetchTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/todos');\n\n            case 3:\n              response = _context.sent;\n              commit('setTodos', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchTodos(_x) {\n      return _fetchTodos.apply(this, arguments);\n    }\n\n    return fetchTodos;\n  }(),\n  addTodo: function () {\n    var _addTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, title) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post('https://jsonplaceholder.typicode.com/todos', {\n                title: title,\n                completed: false\n              });\n\n            case 3:\n              response = _context2.sent;\n              commit('newTodo', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addTodo(_x2, _x3) {\n      return _addTodo.apply(this, arguments);\n    }\n\n    return addTodo;\n  }(),\n  deleteTodo: function () {\n    var _deleteTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n            case 3:\n              commit('removeTodo', id);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteTodo(_x4, _x5) {\n      return _deleteTodo.apply(this, arguments);\n    }\n\n    return deleteTodo;\n  }(),\n  filterTodos: function () {\n    var _filterTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, e) {\n      var commit, limit, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              // Get selected number\n              limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n              _context4.next = 4;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=\".concat(limit));\n\n            case 4:\n              response = _context4.sent;\n              commit('setTodos', response.data);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filterTodos(_x6, _x7) {\n      return _filterTodos.apply(this, arguments);\n    }\n\n    return filterTodos;\n  }(),\n  updateTodo: function () {\n    var _updateTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, updTodo) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.put(\"https://jsonplaceholder.typicode.com/todos/\".concat(updTodo.id), updTodo);\n\n            case 3:\n              response = _context5.sent;\n              console.log(response.data);\n              commit('updateTodo', response.data);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateTodo(_x8, _x9) {\n      return _updateTodo.apply(this, arguments);\n    }\n\n    return updateTodo;\n  }()\n};\nvar mutations = {\n  setTodos: function setTodos(state, todos) {\n    return state.todos = todos;\n  },\n  newTodo: function newTodo(state, todo) {\n    return state.todos.unshift(todo);\n  },\n  removeTodo: function removeTodo(state, id) {\n    return state.todos = state.todos.filter(function (todo) {\n      return todo.id !== id;\n    });\n  },\n  updateTodo: function updateTodo(state, updTodo) {\n    var index = state.todos.findIndex(function (todo) {\n      return todo.id === updTodo.id;\n    });\n\n    if (index !== -1) {\n      state.todos.splice(index, 1, updTodo);\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/home/robert/go/src/github.com/wr125/vx_project/src/store/modules/todos.js"],"names":["axios","state","todos","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","title","post","completed","deleteTodo","id","delete","filterTodos","e","limit","parseInt","target","options","selectedIndex","innerText","updateTodo","updTodo","put","console","log","mutations","setTodos","newTodo","todo","unshift","removeTodo","filter","index","findIndex","splice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE;AADK,CAAd;AAIA,IAAMC,OAAO,GAAG;AACdC,EAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACC,KAAV;AAAA;AADD,CAAhB;AAIA,IAAMG,OAAO,GAAG;AACRC,EAAAA,UADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACKC,cAAAA,MADL,QACKA,MADL;AAAA;AAAA,qBAEWP,KAAK,CAACQ,GAAN,CACrB,4CADqB,CAFX;;AAAA;AAENC,cAAAA,QAFM;AAMZF,cAAAA,MAAM,CAAC,UAAD,EAAaE,QAAQ,CAACC,IAAtB,CAAN;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQRC,EAAAA,OARQ;AAAA;AAAA;AAAA,qDAQYC,KARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAQEL,cAAAA,MARF,SAQEA,MARF;AAAA;AAAA,qBASWP,KAAK,CAACa,IAAN,CACrB,4CADqB,EAErB;AAAED,gBAAAA,KAAK,EAALA,KAAF;AAASE,gBAAAA,SAAS,EAAE;AAApB,eAFqB,CATX;;AAAA;AASNL,cAAAA,QATM;AAcZF,cAAAA,MAAM,CAAC,SAAD,EAAYE,QAAQ,CAACC,IAArB,CAAN;;AAdY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBRK,EAAAA,UAhBQ;AAAA;AAAA;AAAA,qDAgBeC,EAhBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBKT,cAAAA,MAhBL,SAgBKA,MAhBL;AAAA;AAAA,qBAiBNP,KAAK,CAACiB,MAAN,sDAA2DD,EAA3D,EAjBM;;AAAA;AAmBZT,cAAAA,MAAM,CAAC,YAAD,EAAeS,EAAf,CAAN;;AAnBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBRE,EAAAA,WArBQ;AAAA;AAAA;AAAA,qDAqBgBC,CArBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBMZ,cAAAA,MArBN,SAqBMA,MArBN;AAsBZ;AACMa,cAAAA,KAvBM,GAuBEC,QAAQ,CACpBF,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBJ,CAAC,CAACG,MAAF,CAASC,OAAT,CAAiBC,aAAlC,EAAiDC,SAD7B,CAvBV;AAAA;AAAA,qBA2BWzB,KAAK,CAACQ,GAAN,6DACgCY,KADhC,EA3BX;;AAAA;AA2BNX,cAAAA,QA3BM;AA+BZF,cAAAA,MAAM,CAAC,UAAD,EAAaE,QAAQ,CAACC,IAAtB,CAAN;;AA/BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCRgB,EAAAA,UAjCQ;AAAA;AAAA;AAAA,qDAiCeC,OAjCf;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCKpB,cAAAA,MAjCL,SAiCKA,MAjCL;AAAA;AAAA,qBAkCWP,KAAK,CAAC4B,GAAN,sDACyBD,OAAO,CAACX,EADjC,GAErBW,OAFqB,CAlCX;;AAAA;AAkCNlB,cAAAA,QAlCM;AAuCZoB,cAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAQ,CAACC,IAArB;AAEAH,cAAAA,MAAM,CAAC,YAAD,EAAeE,QAAQ,CAACC,IAAxB,CAAN;;AAzCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AA6CA,IAAMqB,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,kBAAC/B,KAAD,EAAQC,KAAR;AAAA,WAAmBD,KAAK,CAACC,KAAN,GAAcA,KAAjC;AAAA,GADM;AAEhB+B,EAAAA,OAAO,EAAE,iBAAChC,KAAD,EAAQiC,IAAR;AAAA,WAAiBjC,KAAK,CAACC,KAAN,CAAYiC,OAAZ,CAAoBD,IAApB,CAAjB;AAAA,GAFO;AAGhBE,EAAAA,UAAU,EAAE,oBAACnC,KAAD,EAAQe,EAAR;AAAA,WACTf,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYmC,MAAZ,CAAmB,UAAAH,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,KAAYA,EAAhB;AAAA,KAAvB,CADL;AAAA,GAHI;AAKhBU,EAAAA,UAAU,EAAE,oBAACzB,KAAD,EAAQ0B,OAAR,EAAoB;AAC9B,QAAMW,KAAK,GAAGrC,KAAK,CAACC,KAAN,CAAYqC,SAAZ,CAAsB,UAAAL,IAAI;AAAA,aAAIA,IAAI,CAAClB,EAAL,KAAYW,OAAO,CAACX,EAAxB;AAAA,KAA1B,CAAd;;AACA,QAAIsB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBrC,MAAAA,KAAK,CAACC,KAAN,CAAYsC,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B,EAA6BX,OAA7B;AACD;AACF;AAVe,CAAlB;AAaA,eAAe;AACb1B,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,OAAO,EAAPA,OAFa;AAGbE,EAAAA,OAAO,EAAPA,OAHa;AAIb0B,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from 'axios';\n\nconst state = {\n  todos: []\n};\n\nconst getters = {\n  allTodos: state => state.todos\n};\n\nconst actions = {\n  async fetchTodos({ commit }) {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/todos'\n    );\n\n    commit('setTodos', response.data);\n  },\n  async addTodo({ commit }, title) {\n    const response = await axios.post(\n      'https://jsonplaceholder.typicode.com/todos',\n      { title, completed: false }\n    );\n\n    commit('newTodo', response.data);\n  },\n  async deleteTodo({ commit }, id) {\n    await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n\n    commit('removeTodo', id);\n  },\n  async filterTodos({ commit }, e) {\n    // Get selected number\n    const limit = parseInt(\n      e.target.options[e.target.options.selectedIndex].innerText\n    );\n\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/todos?_limit=${limit}`\n    );\n\n    commit('setTodos', response.data);\n  },\n  async updateTodo({ commit }, updTodo) {\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/todos/${updTodo.id}`,\n      updTodo\n    );\n\n    console.log(response.data);\n\n    commit('updateTodo', response.data);\n  }\n};\n\nconst mutations = {\n  setTodos: (state, todos) => (state.todos = todos),\n  newTodo: (state, todo) => state.todos.unshift(todo),\n  removeTodo: (state, id) =>\n    (state.todos = state.todos.filter(todo => todo.id !== id)),\n  updateTodo: (state, updTodo) => {\n    const index = state.todos.findIndex(todo => todo.id === updTodo.id);\n    if (index !== -1) {\n      state.todos.splice(index, 1, updTodo);\n    }\n  }\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations\n};\n"]}]}